:root {
	--bg: #e8e8e8;
	--light: #cecece;
	--dark: #a7a7a7;
	--darker: #717170;
	--darkest: #4d4d4d;

	--red: #fe392e;
	--blue: #00c2d7;
	--red-faded: #ffaba9;
	--blue-faded: #77dee9;
	--purple: #8b4fda;
	--green: #61bb1c;
	--green-faded: #76D380;

	--raise: 16px;
	--spacing: 4px;
}
@define-mixin raise $raise: 5px, $color: var(--darker) {
	transform: translate($raise, -$raise);

	&:before,
	&:after {
		content: "";
		position: absolute;
		pointer-events: none;
	}
	&:before {
		left: -$raise;
		top: 0;
		bottom: -$raise;
		width: 0;
		border-top: solid $raise transparent;
		border-right: solid $raise $color;
	}
	&:after {
		left: -$raise;
		bottom: -$raise;
		right: 0;
		height: 0;
		border-right: solid $raise transparent;
		border-top: solid $raise $color;
	}
}

@font-face {
	font-family: 'verblight';
	src: url('fonts/VerbLight-webfont.eot');
	src: url('fonts/VerbLight-webfont.eot?#iefix') format('embedded-opentype'),
		 url('fonts/VerbLight-webfont.woff2') format('woff2'),
		 url('fonts/VerbLight-webfont.woff') format('woff'),
		 url('fonts/VerbLight-webfont.ttf') format('truetype'),
		 url('fonts/VerbLight-webfont.svg#verblight') format('svg');
	font-weight: normal;
	font-style: normal;
}


* {
	box-sizing: border-box;
}
html,
body {
	width: 100%;
	height: 100%;
	background-color: var(--bg);
	font: 15px 'verblight', sans-serif;
}
body {
	padding: 0;
	margin: 0;
}
figure {
	padding: 0;
	margin: 0;
}


.flex-row {
	display: flex;
}
.flex-column {
	display: flex;
	flex-direction: column;
}
.flex-justify-center {
	justify-content: center;
}
.flex-align-center {
	align-items: center;
}
.flex-grow {
	flex-grow: 1;
}
.raise {
	@mixin raise;
}

#app {
	display: flex;
	width: 100%;
	height: 100%;
}
#sidebar {
	flex-grow: 1;
	padding: var(--raise);
}

@keyframes previous-blue {
	0% {   box-shadow: 0 0 0 0px color(var(--blue) alpha(50%)); }
	100% { box-shadow: 0 0 0 10px color(var(--blue) alpha(50%)); }
}
@keyframes previous-red {
	0% {   box-shadow: 0 0 0 0px color(var(--red) alpha(50%)); }
	100% { box-shadow: 0 0 0 10px color(var(--red) alpha(50%)); }
}
.tile {
	appearance: none;
	display: flex;
	justify-content: center;
	align-items: center;
	width: 100%;
	height: 100%;
	background-color: var(--light);
	background-clip: padding-box;
	font: inherit;
	padding: 0;
	border: 0;
	margin: 0;
	outline: none;
	user-select: none;

	&.blocked:not(.blue):not(.red) {
		background-image: repeating-linear-gradient(-45deg, transparent, transparent 10px, rgba(0,0,0,.25) 10px, rgba(0,0,0,.25) 20px);
		pointer-events: none;
	}
	&.blue {
		background-color: var(--blue) !important;
		color: white;
		
		&.previous {
			animation: previous-blue 750ms linear infinite;
		}
	}
	&.red {
		background-color: var(--red) !important;
		color: white;

		&.previous {
			animation: previous-red 750ms linear infinite;
		}
	}
}
.board {
	display: flex;
	flex-wrap: wrap;
	width: 100%;
	height: 100%;

	& .tile {
		width: calc(33.333% - 2 * var(--spacing));
		height: calc(33.333% - 2 * var(--spacing));
		margin: var(--spacing);
	}
	&:nth-child(2n) {
		& .tile {
			background-color: var(--dark);
		}
	}
	&.active .tile:not(.blocked):not(.blue):not(.red):not(:active) {
		@mixin raise var(--raise);
		cursor: pointer;
	}
	&.blue {
		& .tile {
			&:not(.blue):not(.red) {
				background-color: var(--blue-faded);
			}
			&.red {
				background-color: var(--blue) !important;
			}
		}
	}
	&.red {
		& .tile {
			&:not(.blue):not(.red) {
				background-color: var(--red-faded);
			}
			&.blue {
				background-color: var(--red) !important;
			}
		}
	}
	&.purple {
		& .tile {
			background-color: var(--purple) !important;
		}
	}
}
.megaboard {
	display: flex;
	flex-wrap: wrap;
	width: 800px;
	height: 800px;
	margin: -calc(2 * var(--spacing));

	& .board {
		width: calc(33.333% - 2 * var(--spacing));
		height: calc(33.333% - 2 * var(--spacing));
		margin: var(--spacing);
	}
	&.mini {
		width: 100px;
		height: 100px;
		margin: 0;

		& .board {
			width: 33.333%;
			height: 33.333%;
			margin: 0;

			& .tile {
				width: 33.333%;
				height: 33.333%;
				transform: none !important;
				background-image: none !important;
				animation: none !important;
				pointer-events: auto !important;
				cursor: inherit !important;
				margin: 0;

				& img,
				&:before,
				&:after {
					display: none;
				}
			}
		}
	}
}

.btn {
	appearance: none;
	flex-shrink: 0;
	width: 100px;
	height: 100px;
	background-color: var(--darkest);
	background-clip: border-box;
	color: white;
	padding: 0;
	border: solid 10px rgba(255,255,255,.4);
	border-radius: 50%;
	margin: 0;
	outline: 0;

	&.mini {
		width: 50px;
		height: 50px;
		border-width: 5px;
	}
	&:disabled {
		opacity: .5;
		cursor: no-drop;
	}
	&:not(:disabled) {
		&.green-faded {
			background-color: var(--green-faded);
		}
		&:active {
			border-width: 5px;
		}
	}
}
button {
	cursor: pointer;
}
.avatar {
	background-position: center center;
	background-size: cover;
	border-color: white;
}

.gameview {
	padding: var(--raise);

	& > header {
		margin: var(--raise) 0;

		& input,
		& output {
			width: 50%;
			flex-grow: 1;
			font: inherit;
			font-size: 1.5em;
			text-align: center;
			margin: 0 var(--raise);
		}
	}
}
.gameitems {
	display: flex;
	flex-direction: column;
	padding: 0;
}
.gameitem {
	display: flex;
	cursor: pointer;
	margin-bottom: calc(2 * var(--spacing));

	& > figure {
		position: relative;
		margin-right: var(--spacing);
		z-index: 2;
	}
	& .swipeable {
		position: relative;
		display: flex;
		align-items: center;
		flex-grow: 1;
		background: var(--dark);
		color: white;
		padding: var(--spacing) var(--raise);
		overflow: hidden;

		& span {
			font-size: 1.5em;
		}

		& .delete {
			display: flex;
			align-items: center;
			justify-content: center;
			position: absolute;
			top: 0;
			right: 0;
			bottom: 0;
			background-color: var(--red);
			font: inherit;
			font-size: 20px;
			padding: var(--raise);
			border-radius: 50% 0 0 50%;
			border: 0;
			transform: translate3d(100%, 0, 0);
			transition: all 300ms;
			z-index: 2;

			&:before {
				content: '';
				position: absolute;
				top: 0;
				left: 0;
				right: 0;
				bottom: 0;
				background: url(icons/ban.svg) center center no-repeat;
				background-size: 56px;
				opacity: .5;
			}
		}
	}
	&.active {
		& .swipeable {
			background-color: var(--blue);
		}
	}
	&.deleting {
		& .swipeable {
			& .delete {
				transform: translate3d(0, 0, 0);
			}
		}
	}
	&:not(:active):not(.new) {
		& > * {
			@mixin raise;
		}
	}
	&:not(.new) {
		& .swipeable {
			position: relative;

			&:after {
				content: '';
				position: absolute;
				top: 0;
				right: 0;
				bottom: 0;
				width: 64px;
				background: url(icons/double-chevron-left.svg) center center no-repeat;
				background-size: 36px;
				opacity: .15;
			}
		}
	}
	&.new {
		background-color: var(--blue);
		color: white;

		& > figure {
			display: flex;
			justify-content: center;
			align-items: center;
			width: 100px;
			height: 100px;
			margin-right: 0;
		}
		& .swipeable {
			background-color: var(--bg);
			color: var(--blue);
			font-size: 3em;
			margin: var(--spacing);
		}
		&:not(:active) {
			@mixin raise var(--spacing), color(var(--blue) blackness(+15%));
		}
	}
}